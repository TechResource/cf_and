apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
def AAVersion = '3.3.1'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    signingConfigs {
        buildIn {
            storeFile rootProject.file('debug_my.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.flightpath.gemini"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 52
        versionName "2.2"
        archivesBaseName = "Gemini_"+versionName+"_"+versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.buildIn
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Gemini"
        }
        beta{
            initWith release
            applicationIdSuffix ".beta"
            resValue "string", "app_name", "Gemini.BETA"
        }
        debug{
            signingConfig signingConfigs.buildIn
            applicationIdSuffix ".dev"
            testCoverageEnabled = "true"
            resValue "string", "app_name", "Gemini.dev"
        }
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs[0].processResources.manifestFile
        resourcePackageName 'com.flightpath.gemini'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //android
    compile rootProject.ext.appCompat
    compile rootProject.ext.recyclerView
    compile rootProject.ext.design
    compile project(':FlightPathCore')
    compile project(':LoginModule')
    compile project(':MapModule')
    compile project(':InspectionModule')

    testCompile 'junit:junit:4.12'
    androidTestCompile (rootProject.ext.supportTestRunner)
    androidTestCompile (rootProject.ext.supportTestRule)
    androidTestCompile (rootProject.ext.supportTestEspresso)
    androidTestCompile (rootProject.ext.supportTestAnnotation)
    compile rootProject.ext.supportAnnotation
    apt 'com.google.dagger:dagger-compiler:2.0'
    compile 'com.google.dagger:dagger:2.0'
    provided 'javax.annotation:jsr250-api:1.0'

    apt "org.androidannotations:androidannotations:$AAVersion"
    compile "org.androidannotations:androidannotations-api:$AAVersion"
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
}
